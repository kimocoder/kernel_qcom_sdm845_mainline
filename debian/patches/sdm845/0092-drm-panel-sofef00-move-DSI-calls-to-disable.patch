From: Caleb Connolly <caleb.connolly@linaro.org>
Date: Sat, 10 Dec 2022 02:50:18 +0000
Subject: drm/panel: sofef00: move DSI calls to disable

Signed-off-by: Caleb Connolly <caleb.connolly@linaro.org>
---
 drivers/gpu/drm/panel/panel-samsung-sofef00.c | 51 ++++++++++++---------------
 1 file changed, 23 insertions(+), 28 deletions(-)

diff --git a/drivers/gpu/drm/panel/panel-samsung-sofef00.c b/drivers/gpu/drm/panel/panel-samsung-sofef00.c
index 51113e2..a53cb87 100644
--- a/drivers/gpu/drm/panel/panel-samsung-sofef00.c
+++ b/drivers/gpu/drm/panel/panel-samsung-sofef00.c
@@ -92,72 +92,66 @@ static int sofef00_panel_on(struct sofef00_panel *ctx)
 	return 0;
 }
 
-static int sofef00_panel_off(struct sofef00_panel *ctx)
+static int sofef00_panel_prepare(struct drm_panel *panel)
 {
-	struct mipi_dsi_device *dsi = ctx->dsi;
-	struct device *dev = &dsi->dev;
+	struct sofef00_panel *ctx = to_sofef00_panel(panel);
+	struct device *dev = &ctx->dsi->dev;
 	int ret;
 
-	dsi->mode_flags &= ~MIPI_DSI_MODE_LPM;
+	if (ctx->prepared)
+		return 0;
 
-	ret = mipi_dsi_dcs_set_display_off(dsi);
+	ret = regulator_enable(ctx->supply);
 	if (ret < 0) {
-		dev_err(dev, "Failed to set display off: %d\n", ret);
+		dev_err(dev, "Failed to enable regulator: %d\n", ret);
 		return ret;
 	}
-	msleep(40);
 
-	ret = mipi_dsi_dcs_enter_sleep_mode(dsi);
+	sofef00_panel_reset(ctx);
+
+	ret = sofef00_panel_on(ctx);
 	if (ret < 0) {
-		dev_err(dev, "Failed to enter sleep mode: %d\n", ret);
+		dev_err(dev, "Failed to initialize panel: %d\n", ret);
+		gpiod_set_value_cansleep(ctx->reset_gpio, 1);
 		return ret;
 	}
-	msleep(160);
 
+	ctx->prepared = true;
 	return 0;
 }
 
-static int sofef00_panel_prepare(struct drm_panel *panel)
+static int sofef00_panel_disable(struct drm_panel *panel)
 {
 	struct sofef00_panel *ctx = to_sofef00_panel(panel);
-	struct device *dev = &ctx->dsi->dev;
+	struct mipi_dsi_device *dsi = ctx->dsi;
 	int ret;
 
-	if (ctx->prepared)
-		return 0;
+	dsi->mode_flags &= ~MIPI_DSI_MODE_LPM;
 
-	ret = regulator_enable(ctx->supply);
+	ret = mipi_dsi_dcs_set_display_off(dsi);
 	if (ret < 0) {
-		dev_err(dev, "Failed to enable regulator: %d\n", ret);
+		dev_err(&dsi->dev, "Failed to set display off: %d\n", ret);
 		return ret;
 	}
+	msleep(40);
 
-	sofef00_panel_reset(ctx);
-
-	ret = sofef00_panel_on(ctx);
+	ret = mipi_dsi_dcs_enter_sleep_mode(dsi);
 	if (ret < 0) {
-		dev_err(dev, "Failed to initialize panel: %d\n", ret);
-		gpiod_set_value_cansleep(ctx->reset_gpio, 1);
+		dev_err(&dsi->dev, "Failed to enter sleep mode: %d\n", ret);
 		return ret;
 	}
+	msleep(160);
 
-	ctx->prepared = true;
 	return 0;
 }
 
 static int sofef00_panel_unprepare(struct drm_panel *panel)
 {
 	struct sofef00_panel *ctx = to_sofef00_panel(panel);
-	struct device *dev = &ctx->dsi->dev;
-	int ret;
 
 	if (!ctx->prepared)
 		return 0;
 
-	ret = sofef00_panel_off(ctx);
-	if (ret < 0)
-		dev_err(dev, "Failed to un-initialize panel: %d\n", ret);
-
 	regulator_disable(ctx->supply);
 
 	ctx->prepared = false;
@@ -199,6 +193,7 @@ static int sofef00_panel_get_modes(struct drm_panel *panel, struct drm_connector
 
 static const struct drm_panel_funcs sofef00_panel_panel_funcs = {
 	.prepare = sofef00_panel_prepare,
+	.disable = sofef00_panel_disable,
 	.unprepare = sofef00_panel_unprepare,
 	.get_modes = sofef00_panel_get_modes,
 };
