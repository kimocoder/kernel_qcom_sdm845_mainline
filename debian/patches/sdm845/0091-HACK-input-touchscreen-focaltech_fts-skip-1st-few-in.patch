From: Joel Selvaraj <jo@jsfamily.in>
Date: Mon, 30 May 2022 08:29:41 +0530
Subject: [PATCH 094/108] HACK: input: touchscreen: focaltech_fts: skip 1st
 few interrupts on resume

In Poco F1 EBBG, the touchscreen interrupt gets triggered once when power button
is pressed for some unknown reason. When system is resumed from suspend state,
this spurious interrupt causes the system to crash as the i2c bus is not yet ready
to be read. As a temporary fix, avoid reading i2c data for the 1st few interrupts
after resume.
---
 drivers/input/touchscreen/focaltech_fts.c | 10 +++++++++-
 1 file changed, 9 insertions(+), 1 deletion(-)

diff --git a/drivers/input/touchscreen/focaltech_fts.c b/drivers/input/touchscreen/focaltech_fts.c
index bdd92a5..8b65848 100644
--- a/drivers/input/touchscreen/focaltech_fts.c
+++ b/drivers/input/touchscreen/focaltech_fts.c
@@ -65,6 +65,7 @@ struct fts_ts_data {
 
 	struct regmap *regmap;
 	int irq;
+	int resume_irq_counter;
 
 	struct regulator_bulk_data regulators[2];
 
@@ -171,7 +172,10 @@ static irqreturn_t fts_ts_interrupt(int irq, void *dev_id)
 {
 	struct fts_ts_data *data = dev_id;
 
-	fts_report_touch(data);
+	if (data->resume_irq_counter <= 0)
+		fts_report_touch(data);
+	else
+		data->resume_irq_counter = data->resume_irq_counter - 1;
 
 	return IRQ_HANDLED;
 }
@@ -342,6 +346,8 @@ static int fts_ts_probe(struct i2c_client *client,
 		return -ENOMEM;
 
 	data->client = client;
+	data->resume_irq_counter = 0;
+
 	error = fts_parse_dt(data);
 	if (error)
 		return error;
@@ -408,6 +414,8 @@ static int fts_pm_resume(struct device *dev)
 	int error = 0;
 
 	mutex_lock(&data->input_dev->mutex);
+
+	data->resume_irq_counter = 3;
 	
 	if (input_device_enabled(data->input_dev))
 		error = fts_start(data);
